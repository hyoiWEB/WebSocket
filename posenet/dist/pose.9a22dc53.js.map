{"version":3,"sources":["js/pose.js"],"names":["videoWidth","videoHeight","isAndroid","test","navigator","userAgent","isiOS","isMobile","setupCamera","mediaDevices","getUserMedia","Error","video","document","getElementById","width","height","mobile","stream","facingMode","undefined","srcObject","Promise","resolve","onloadedmetadata","loadVideo","play","guiState","input","mobileNetArchitecture","outputStride","imageScaleFactor","minPoseConfidence","minPartConfidence","output","showVideo","showSkeleton","showPoints","showBoundingBox","net","setupGui","cameras","length","camera","deviceId","gui","dat","GUI","close","domElement","hidden","addFolder","architectureController","add","min","max","open","onChange","architecture","changeToArchitecture"],"mappings":"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","file":"pose.9a22dc53.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst videoWidth = 512;\nconst videoHeight = 512;\n//const videoHeight = 288;\n\nfunction isAndroid() { return /Android/i.test(navigator.userAgent); }\nfunction isiOS() { return /iPhone|iPad|iPod/i.test(navigator.userAgent); }\nfunction isMobile() { return isAndroid() || isiOS(); }\n\nasync function setupCamera() {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n    throw new Error(\n        'Browser API navigator.mediaDevices.getUserMedia not available');\n  }\n\n  const video = document.getElementById('video');\n  video.width = videoWidth;\n  video.height = videoHeight;\n\n  const mobile = isMobile();\n  const stream = await navigator.mediaDevices.getUserMedia({\n    'audio': false,\n    'video': {\n      facingMode: 'user',\n      width: mobile ? undefined : videoWidth,\n      height: mobile ? undefined : videoHeight,\n    },\n  });\n  video.srcObject = stream;\n\n  return new Promise((resolve) => {\n    video.onloadedmetadata = () => {\n      resolve(video);\n    };\n  });\n}\n\nasync function loadVideo() {\n  const video = await setupCamera();\n  video.play();\n  return video;\n}\n\nconst guiState = {\n  input: {\n    mobileNetArchitecture: isMobile() ? '0.50' : '0.75',\n    outputStride: 16,\n    imageScaleFactor: 0.4,\n  },\n  minPoseConfidence: 0.1,\n  minPartConfidence: 0.5,\n  output: {\n    showVideo: true,\n    showSkeleton: true,\n    showPoints: true,\n    showBoundingBox: false,\n  },\n  net: null,\n};\n\nfunction setupGui(cameras, net) {\n  guiState.net = net;\n\n  if (cameras.length > 0) {\n    guiState.camera = cameras[0].deviceId;\n  }\n\n  const gui = new dat.GUI({width: 300});\n  gui.close();\n  gui.domElement.hidden = true;\n\n  let input = gui.addFolder('Input');\n  const architectureController = input.add(guiState.input, 'mobileNetArchitecture', ['1.01', '1.00', '0.75', '0.50']);\n  input.add(guiState.input, 'outputStride', [8, 16, 32]);\n  input.add(guiState.input, 'imageScaleFactor').min(0.2).max(1.0);\n  input.open();\n\n  let output = gui.addFolder('Output');\n  output.add(guiState.output, 'showVideo');\n  output.add(guiState.output, 'showSkeleton');\n  output.add(guiState.output, 'showPoints');\n  output.add(guiState.output, 'showBoundingBox');\n  output.open();\n\n  architectureController.onChange(function(architecture) {\n    guiState.changeToArchitecture = architecture;\n  });\n}\n\n"]}