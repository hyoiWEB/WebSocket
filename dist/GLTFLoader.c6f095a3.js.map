{"version":3,"sources":["js/loaders/GLTFLoader.js"],"names":["THREE","GLTFLoader","manager","undefined","DefaultLoadingManager","dracoLoader","prototype","constructor","crossOrigin","load","url","onLoad","onProgress","onError","scope","path","LoaderUtils","extractUrlBase","loader","FileLoader","setResponseType","data","parse","e","setCrossOrigin","value","setPath","setDRACOLoader","content","extensions","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","error","json","JSON","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","indexOf","console","warn","parser","GLTFParser","scene","scenes","cameras","animations","glTF","userData","addUnknownExtensionsToUserData","GLTFRegistry","objects","get","key","add","object","remove","removeAll","DDSLoader","name","ddsLoader","lights","extension","lightDefs","lightDef","lightNode","color","Color","fromArray","range","type","DirectionalLight","target","position","set","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","push","getMaterialType","material","MeshBasicMaterial","extendParams","materialParams","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","index","Promise","all","BINARY_EXTENSION_BUFFER_NAME","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","resolve","decodeDracoFile","geometry","attribute","specularGlossinessParams","ShaderMaterial","params","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","clone","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossIndex","createMaterial","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","refreshUniforms","renderer","camera","group","diffuse","copy","multiplyScalar","uvScaleMap","isWebGLRenderTarget","texture","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","call","Object","create","copySampleValue_","result","values","valueSize","offset","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s0","s1","s2","s3","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","WEBGL_TYPE","Number","Matrix3","Matrix4","Vector2","Vector3","Vector4","Texture","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipMapNearestFilter","LinearMipMapNearestFilter","NearestMipMapLinearFilter","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_SIDES","BackSide","FrontSide","WEBGL_DEPTH_FUNCS","NeverDepth","LessDepth","EqualDepth","LessEqualDepth","GreaterEqualDepth","NotEqualDepth","AlwaysDepth","WEBGL_BLEND_EQUATIONS","AddEquation","SubtractEquation","ReverseSubtractEquation","WEBGL_BLEND_FUNCS","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","WEBGL_TYPE_SIZES","POSITION","NORMAL","TEXCOORD_0","TEXCOORD0","TEXCOORD","TEXCOORD_1","COLOR_0","COLOR0","COLOR","WEIGHTS_0","WEIGHT","JOINTS_0","JOINT","PATH_PROPERTIES","scale","translation","rotation","weights","INTERPOLATION","CUBICSPLINE","InterpolateSmooth","InterpolateLinear","STEP","InterpolateDiscrete","STATES_ENABLES","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","createDefaultMaterial","MeshStandardMaterial","depthTest","side","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","morphPositions","morphNormals","positionAttribute","cloneBufferAttribute","j","jl","count","setXYZ","getX","getY","getZ","normalAttribute","normal","morphAttributes","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","isPrimitiveEqual","a","b","indices","isObjectEqual","keys","isArrayEqual","getCachedGeometry","cache","newPrimitive","cached","promise","getCachedCombinedGeometry","geometries","baseGeometries","getCachedMultiPassGeometry","primitives","baseGeometry","isInterleavedBufferAttribute","itemSize","getW","BufferAttribute","isMultiPassGeometry","primitive0","targets0","mode","options","primitiveCache","multiplePrimitivesCache","multiPassGeometryCache","textureLoader","TextureLoader","fileLoader","markDefs","getMultiDependencies","dependencies","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","getDependencies","defs","def","types","results","pendings","bind","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","accessorIndex","sparse","pendingBufferViews","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","Loader","Handlers","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","textureName","materialIndex","materialDef","materials","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","y","encoding","sRGBEncoding","addPrimitiveAttributes","primitiveDef","gltfAttributeName","threeAttributeName","addAttribute","setIndex","loadGeometries","isMultiPass","originalPrimitives","geometryPromise","BufferGeometry","accessor","addGroup","BufferGeometryUtils","mergeBufferGeometries","meshIndex","originalMaterials","isMultiMaterial","groups","SkinnedMesh","Mesh","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","Line","LineLoop","Points","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexColors","VertexColors","flatShading","morphTargets","uv2","uv","log","onBeforeRender","Group","cameraIndex","cameraDef","PerspectiveCamera","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","tracks","channels","channel","node","id","input","parameters","output","inputAccessor","outputAccessor","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","track","AnimationUtils","arraySlice","createInterpolant","InterpolantFactoryMethodGLTFCubicSpline","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","Bone","instanceNum","children","light","Object3D","PropertyBinding","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","allNodes","isGroup","bones","boneInverses","jointId","jointNode","mat","Skeleton","matrixWorld","child","sceneIndex","sceneDef","Scene","nodeIds"],"mappings":"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","file":"GLTFLoader.c6f095a3.js","sourceRoot":"..","sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nTHREE.GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = this.path !== undefined ? this.path : THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, path, onLoad, onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow e;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.path || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations, json ) {\n\n\t\t\t\tvar glTF = {\n\t\t\t\t\tscene: scene,\n\t\t\t\t\tscenes: scenes,\n\t\t\t\t\tcameras: cameras,\n\t\t\t\t\tanimations: animations,\n\t\t\t\t\tasset: json.asset,\n\t\t\t\t\tparser: parser,\n\t\t\t\t\tuserData: {}\n\t\t\t\t};\n\n\t\t\t\taddUnknownExtensionsToUserData( extensions, glTF, json );\n\n\t\t\t\tonLoad( glTF );\n\n\t\t\t}, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification:\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension() {\n\n\t\tif ( ! THREE.DDSLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = new THREE.DDSLoader();\n\n\t}\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tthis.lights = [];\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tvar lightDefs = extension.lights || [];\n\n\t\tfor ( var i = 0; i < lightDefs.length; i ++ ) {\n\n\t\t\tvar lightDef = lightDefs[ i ];\n\t\t\tvar lightNode;\n\n\t\t\tvar color = new THREE.Color( 0xffffff );\n\t\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\t\tswitch ( lightDef.type ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\t\tlightNode.target.position.set( 0, 0, 1 );\n\t\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'point':\n\t\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\t\tlightNode.distance = range;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'spot':\n\t\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\t\tlightNode.distance = range;\n\t\t\t\t\t// Handle spotlight properties.\n\t\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\t\tlightNode.target.position.set( 0, 0, 1 );\n\t\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t\t}\n\n\t\t\tlightNode.decay = 2;\n\n\t\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\t\tlightNode.name = lightDef.name || ( 'light_' + i );\n\n\t\t\tthis.lights.push( lightNode );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = material.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tif ( ! ( attributeName in ATTRIBUTES ) ) continue;\n\n\t\t\tthreeAttributeMap[ ATTRIBUTES[ attributeName ] ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tif ( ATTRIBUTES[ attributeName ] !== undefined && gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ ATTRIBUTES[ attributeName ] ] = componentType;\n\t\t\t\tattributeNormalizedMap[ ATTRIBUTES[ attributeName ] ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( params, material, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tparams.vertexShader = shader.vertexShader;\n\t\t\t\tparams.fragmentShader = fragmentShader;\n\t\t\t\tparams.uniforms = uniforms;\n\t\t\t\tparams.defines = { 'STANDARD': '' };\n\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tparams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tparams.color.fromArray( array );\n\t\t\t\t\tparams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture.index ) );\n\n\t\t\t\t}\n\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossIndex ) );\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossIndex ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t\tuniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;\n\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s0 = 2 * ppp - 3 * pp + 1;\n\t\tvar s1 = ppp - 2 * pp + p;\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide, // Culling front\n\t\t1029: THREE.FrontSide // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD0: 'uv', // deprecated\n\t\tTEXCOORD: 'uv', // deprecated\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tCOLOR0: 'color', // deprecated\n\t\tCOLOR: 'color', // deprecated\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tWEIGHT: 'skinWeight', // deprecated\n\t\tJOINTS_0: 'skinIndex',\n\t\tJOINT: 'skinIndex' // deprecated\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: THREE.InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\n\t\t                                      // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\n\t\t                                      // using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\n\t\t                                      // See KeyframeTrack.optimize() for the detail.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\treturn new THREE.MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} def\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tobject.userData = gltfDef.extras;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {Array<THREE.BufferAttribute>} accessors\n\t */\n\tfunction addMorphTargets( geometry, targets, accessors ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return;\n\n\t\tvar morphPositions = [];\n\t\tvar morphNormals = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t// Three.js morph position is absolute value. The formula is\n\t\t\t\t//   basePosition\n\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\n\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\n\t\t\t\t//     ...\n\t\t\t\t// while the glTF one is relative\n\t\t\t\t//   basePosition\n\t\t\t\t//     + weight0 * glTFmorphPosition0\n\t\t\t\t//     + weight1 * glTFmorphPosition1\n\t\t\t\t//     ...\n\t\t\t\t// then we need to convert from relative to absolute here.\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t// Cloning not to pollute original accessor\n\t\t\t\t\tvar positionAttribute = cloneBufferAttribute( accessors[ target.POSITION ] );\n\t\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpositionAttribute = geometry.attributes.position;\n\n\t\t\t\t}\n\n\t\t\t\tmorphPositions.push( positionAttribute );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\tvar normalAttribute;\n\n\t\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\t\tvar normalAttribute = cloneBufferAttribute( accessors[ target.NORMAL ] );\n\t\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnormalAttribute = geometry.attributes.normal;\n\n\t\t\t\t}\n\n\t\t\t\tmorphNormals.push( normalAttribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction isPrimitiveEqual( a, b ) {\n\n\t\tif ( a.indices !== b.indices ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn isObjectEqual( a.attributes, b.attributes );\n\n\t}\n\n\tfunction isObjectEqual( a, b ) {\n\n\t\tif ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\n\n\t\tfor ( var key in a ) {\n\n\t\t\tif ( a[ key ] !== b[ key ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isArrayEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) return false;\n\n\t\tfor ( var i = 0, il = a.length; i < il; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getCachedGeometry( cache, newPrimitive ) {\n\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\n\n\t\t\tvar cached = cache[ i ];\n\n\t\t\tif ( isPrimitiveEqual( cached.primitive, newPrimitive ) ) return cached.promise;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfunction getCachedCombinedGeometry( cache, geometries ) {\n\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\n\n\t\t\tvar cached = cache[ i ];\n\n\t\t\tif ( isArrayEqual( geometries, cached.baseGeometries ) ) return cached.geometry;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfunction getCachedMultiPassGeometry( cache, geometry, primitives ) {\n\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\n\n\t\t\tvar cached = cache[ i ];\n\n\t\t\tif ( geometry === cached.baseGeometry && isArrayEqual( primitives, cached.primitives ) ) return cached.geometry;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ i ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ i + 1 ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ i + 2 ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ i + 3 ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/**\n\t * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\n\t * Returns true if all primitives use the same attributes/morphAttributes/mode\n\t * and also have index. Otherwise returns false.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Boolean}\n\t */\n\tfunction isMultiPassGeometry( primitives ) {\n\n\t\tif ( primitives.length < 2 ) return false;\n\n\t\tvar primitive0 = primitives[ 0 ];\n\t\tvar targets0 = primitive0.targets || [];\n\n\t\tif ( primitive0.indices === undefined ) return false;\n\n\t\tfor ( var i = 1, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\n\t\t\tif ( primitive0.mode !== primitive.mode ) return false;\n\t\t\tif ( primitive.indices === undefined ) return false;\n\t\t\tif ( ! isObjectEqual( primitive0.attributes, primitive.attributes ) ) return false;\n\n\t\t\tvar targets = primitive.targets || [];\n\n\t\t\tif ( targets0.length !== targets.length ) return false;\n\n\t\t\tfor ( var j = 0, jl = targets0.length; j < jl; j ++ ) {\n\n\t\t\t\tif ( ! isObjectEqual( targets0[ j ], targets[ j ] ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = [];\n\t\tthis.multiplePrimitivesCache = [];\n\t\tthis.multiPassGeometryCache = [];\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar json = this.json;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\t// Fire the callback on complete\n\t\tthis.getMultiDependencies( [\n\n\t\t\t'scene',\n\t\t\t'animation',\n\t\t\t'camera'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar scenes = dependencies.scenes || [];\n\t\t\tvar scene = scenes[ json.scene || 0 ];\n\t\t\tvar animations = dependencies.animations || [];\n\t\t\tvar cameras = dependencies.cameras || [];\n\n\t\t\tonLoad( scene, scenes, cameras, animations, json );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\n\t * @param {Array<string>} types\n\t * @return {Promise<Object<Array<Object>>>}\n\t */\n\tGLTFParser.prototype.getMultiDependencies = function ( types ) {\n\n\t\tvar results = {};\n\t\tvar pendings = [];\n\n\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\n\n\t\t\tvar type = types[ i ];\n\t\t\tvar value = this.getDependencies( type );\n\n\t\t\tvalue = value.then( function ( key, value ) {\n\n\t\t\t\tresults[ key ] = value;\n\n\t\t\t}.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\n\n\t\t\tpendings.push( value );\n\n\t\t}\n\n\t\treturn Promise.all( pendings ).then( function () {\n\n\t\t\treturn results;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} textureName\n\t * @param {number} textureIndex\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {\n\n\t\treturn this.getDependency( 'texture', textureIndex ).then( function ( texture ) {\n\n\t\t\tmaterialParams[ textureName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType( materialDef );\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tvar textureIndex = metallicRoughness.metallicRoughnessTexture.index;\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', textureIndex ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', textureIndex ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture.index ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture.index ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture.index ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// Normal map textures use OpenGL conventions:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\n\t\t\tif ( material.normalScale ) {\n\n\t\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t\t}\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param  {THREE.BufferGeometry} geometry\n\t * @param  {GLTF.Primitive} primitiveDef\n\t * @param  {Array<THREE.BufferAttribute>} accessors\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, accessors ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ];\n\t\t\tvar bufferAttribute = accessors[ attributes[ gltfAttributeName ] ];\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( ! threeAttributeName ) continue;\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tgeometry.addAttribute( threeAttributeName, bufferAttribute );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tgeometry.setIndex( accessors[ primitiveDef.indices ] );\n\n\t\t}\n\n\t\tif ( primitiveDef.targets !== undefined ) {\n\n\t\t\taddMorphTargets( geometry, primitiveDef.targets, accessors );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\n\t * Otherwise, returns BufferGeometries without .groups as many as primitives.\n\t *\n\t * @param {Array<Object>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tvar isMultiPass = isMultiPassGeometry( primitives );\n\t\tvar originalPrimitives;\n\n\t\tif ( isMultiPass ) {\n\n\t\t\toriginalPrimitives = primitives; // save original primitives and use later\n\n\t\t\t// We build a single BufferGeometry with .groups from multiple primitives\n\t\t\t// because all primitives share the same attributes/morph/mode and have indices.\n\n\t\t\tprimitives = [ primitives[ 0 ] ];\n\n\t\t\t// Sets .groups and combined indices to a geometry later in this method.\n\n\t\t}\n\n\t\treturn this.getDependencies( 'accessor' ).then( function ( accessors ) {\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// See if we've already created this geometry\n\t\t\t\tvar cached = getCachedGeometry( cache, primitive );\n\n\t\t\t\tif ( cached ) {\n\n\t\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\t\tpending.push( cached );\n\n\t\t\t\t} else if ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tvar geometryPromise = extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\t\t\taddPrimitiveAttributes( geometry, primitive, accessors );\n\n\t\t\t\t\t\t\treturn geometry;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tcache.push( { primitive: primitive, promise: geometryPromise } );\n\n\t\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\t\taddPrimitiveAttributes( geometry, primitive, accessors );\n\n\t\t\t\t\tvar geometryPromise = Promise.resolve( geometry );\n\n\t\t\t\t\t// Cache this geometry\n\t\t\t\t\tcache.push( { primitive: primitive, promise: geometryPromise } );\n\n\t\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function ( geometries ) {\n\n\t\t\t\tif ( isMultiPass ) {\n\n\t\t\t\t\tvar baseGeometry = geometries[ 0 ];\n\n\t\t\t\t\t// See if we've already created this combined geometry\n\t\t\t\t\tvar cache = parser.multiPassGeometryCache;\n\t\t\t\t\tvar cached = getCachedMultiPassGeometry( cache, baseGeometry, originalPrimitives );\n\n\t\t\t\t\tif ( cached !== null ) return [ cached.geometry ];\n\n\t\t\t\t\t// Cloning geometry because of index override.\n\t\t\t\t\t// Attributes can be reused so cloning by myself here.\n\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\t\tgeometry.name = baseGeometry.name;\n\t\t\t\t\tgeometry.userData = baseGeometry.userData;\n\n\t\t\t\t\tfor ( var key in baseGeometry.attributes ) geometry.addAttribute( key, baseGeometry.attributes[ key ] );\n\t\t\t\t\tfor ( var key in baseGeometry.morphAttributes ) geometry.morphAttributes[ key ] = baseGeometry.morphAttributes[ key ];\n\n\t\t\t\t\tvar indices = [];\n\t\t\t\t\tvar offset = 0;\n\n\t\t\t\t\tfor ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar accessor = accessors[ originalPrimitives[ i ].indices ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = accessor.count; j < jl; j ++ ) indices.push( accessor.array[ j ] );\n\n\t\t\t\t\t\tgeometry.addGroup( offset, accessor.count, i );\n\n\t\t\t\t\t\toffset += accessor.count;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setIndex( indices );\n\n\t\t\t\t\tcache.push( { geometry: geometry, baseGeometry: baseGeometry, primitives: originalPrimitives } );\n\n\t\t\t\t\treturn [ geometry ];\n\n\t\t\t\t} else if ( geometries.length > 1 && THREE.BufferGeometryUtils !== undefined ) {\n\n\t\t\t\t\t// Tries to merge geometries with BufferGeometryUtils if possible\n\n\t\t\t\t\tfor ( var i = 1, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t// can't merge if draw mode is different\n\t\t\t\t\t\tif ( primitives[ 0 ].mode !== primitives[ i ].mode ) return geometries;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// See if we've already created this combined geometry\n\t\t\t\t\tvar cache = parser.multiplePrimitivesCache;\n\t\t\t\t\tvar cached = getCachedCombinedGeometry( cache, geometries );\n\n\t\t\t\t\tif ( cached ) {\n\n\t\t\t\t\t\tif ( cached.geometry !== null ) return [ cached.geometry ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar geometry = THREE.BufferGeometryUtils.mergeBufferGeometries( geometries, true );\n\n\t\t\t\t\t\tcache.push( { geometry: geometry, baseGeometries: geometries } );\n\n\t\t\t\t\t\tif ( geometry !== null ) return [ geometry ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar scope = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\n\t\treturn this.getMultiDependencies( [\n\n\t\t\t'accessor',\n\t\t\t'material'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar primitives = meshDef.primitives;\n\t\t\tvar originalMaterials = [];\n\n\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\toriginalMaterials[ i ] = primitives[ i ].material === undefined\n\t\t\t\t\t? createDefaultMaterial()\n\t\t\t\t\t: dependencies.materials[ primitives[ i ].material ];\n\n\t\t\t}\n\n\t\t\treturn scope.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar isMultiMaterial = geometries.length === 1 && geometries[ 0 ].groups.length > 0;\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = isMultiMaterial ? originalMaterials : originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t\t// 2. update Material depending on Mesh and BufferGeometry\n\n\t\t\t\t\tvar materials = isMultiMaterial ? mesh.material : [ mesh.material ];\n\n\t\t\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\t\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\t\t\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\t\t\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\t\t\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\t\t\t\tfor ( var j = 0, jl = materials.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar material = materials[ j ];\n\n\t\t\t\t\t\tif ( mesh.isPoints ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\t\t\t\t\tvar pointsMaterial = scope.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\t\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\t\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\t\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\t\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\t\tscope.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = pointsMaterial;\n\n\t\t\t\t\t\t} else if ( mesh.isLine ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\t\t\t\t\tvar lineMaterial = scope.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\t\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\t\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\t\tscope.cache.add( cacheKey, lineMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = lineMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Clone the material if it will be modified\n\t\t\t\t\t\tif ( useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\t\t\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\t\t\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\t\t\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\t\t\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\t\t\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\t\t\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\t\t\t\t\tvar cachedMaterial = scope.cache.get( cacheKey );\n\n\t\t\t\t\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\t\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t\t\t\t\t: material.clone();\n\n\t\t\t\t\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\t\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\n\t\t\t\t\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\t\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\t\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\t\t\t\t\tscope.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial = cachedMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ j ] = material;\n\n\t\t\t\t\t\t// workarounds for mesh and geometry\n\n\t\t\t\t\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\t\t\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t\t\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\t\t\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.material = isMultiMaterial ? materials : materials[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new THREE.Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\treturn this.getMultiDependencies( [\n\n\t\t\t'accessor',\n\t\t\t'node'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\n\t\t\t\tif ( sampler ) {\n\n\t\t\t\t\tvar target = channel.target;\n\t\t\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\t\t\tvar inputAccessor = dependencies.accessors[ input ];\n\t\t\t\t\tvar outputAccessor = dependencies.accessors[ output ];\n\n\t\t\t\t\tvar node = dependencies.nodes[ name ];\n\n\t\t\t\t\tif ( node ) {\n\n\t\t\t\t\t\tnode.updateMatrix();\n\t\t\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\t\t\tvar targetNames = [];\n\n\t\t\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t\t\t// node can be THREE.Group here but\n\t\t\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\n\t\t\t\t\t\t\t// the property of a mesh object under group.\n\n\t\t\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\n\t\t\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\n\t\t\t\t\t\t// be reused by other tracks, make copies here.\n\t\t\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tinterpolation\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Here is the trick to enable custom interpolation.\n\t\t\t\t\t\t\t// Overrides .createInterpolant in a factory method which creates custom interpolation.\n\t\t\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t// Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\n\t\t\t\t\t\t\t\t// track.getInterpolation() doesn't return valid value for custom interpolant.\n\t\t\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn this.getMultiDependencies( [\n\n\t\t\t'mesh',\n\t\t\t'skin',\n\t\t\t'camera',\n\t\t\t'light'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new THREE.Bone();\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tvar mesh = dependencies.meshes[ nodeDef.mesh ];\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnode = mesh;\n\n\t\t\t\t}\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tnode = dependencies.cameras[ nodeDef.camera ];\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tvar lights = extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].lights;\n\t\t\t\tnode = lights[ nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new THREE.Object3D();\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, allNodes, skins ) {\n\n\t\t\tvar node = allNodes[ nodeId ];\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\t// build skeleton here as well\n\n\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar mesh = meshes[ i ];\n\t\t\t\t\tvar skinEntry = skins[ nodeDef.skin ];\n\n\t\t\t\t\tvar bones = [];\n\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = skinEntry.joints.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar jointId = skinEntry.joints[ j ];\n\t\t\t\t\t\tvar jointNode = allNodes[ jointId ];\n\n\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', jointId );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build node hierachy\n\n\t\t\tparentObject.add( node );\n\n\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\tbuildNodeHierachy( child, node, json, allNodes, skins );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\n\t\t\treturn this.getMultiDependencies( [\n\n\t\t\t\t'node',\n\t\t\t\t'skin'\n\n\t\t\t] ).then( function ( dependencies ) {\n\n\t\t\t\tvar scene = new THREE.Scene();\n\t\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\t\tbuildNodeHierachy( nodeIds[ i ], scene, json, dependencies.nodes, dependencies.skins );\n\n\t\t\t\t}\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n"]}