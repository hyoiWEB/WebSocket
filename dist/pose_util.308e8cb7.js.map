{"version":3,"sources":["js/pose_util.js"],"names":["color","boundingBoxColor","lineWidth","toTuple","y","x","drawPoint","ctx","r","beginPath","arc","Math","PI","fillStyle","fill","drawSegment","ay","ax","by","bx","scale","moveTo","lineTo","strokeStyle","stroke","drawSkeleton","keypoints","minConfidence","adjacentKeyPoints","posenet","getAdjacentKeyPoints","forEach","position","drawKeypoints","i","length","keypoint","score","drawBoundingBox","boundingBox","getBoundingBox","rect","minX","minY","maxX","maxY","renderToCanvas","a","height","width","shape","imageData","ImageData","data","j","k","putImageData","renderImageToCanvas","image","size","canvas","getContext","drawImage","drawHeatMapValues","heatMapValues","outputStride","radius","scaledValues","mul","tf","scalar","drawPoints","points","buffer","values","pointY","pointX","drawOffsetVectors","offsets","offsetPoints","singlePose","getOffsetPoints","heatmapData","offsetPointsData","heatmapY","heatmapX","offsetPointY","offsetPointX"],"mappings":"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","file":"pose_util.308e8cb7.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst color = 'aqua';\nconst boundingBoxColor = 'red';\nconst lineWidth = 2;\n\nfunction toTuple({y, x}) { return [y, x]; }\n\nfunction drawPoint(ctx, y, x, r, color) {\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nfunction drawSegment([ay, ax], [by, bx], color, scale, ctx) {\n  ctx.beginPath();\n  ctx.moveTo(ax * scale, ay * scale);\n  ctx.lineTo(bx * scale, by * scale);\n  ctx.lineWidth = lineWidth;\n  ctx.strokeStyle = color;\n  ctx.stroke();\n}\n\nfunction drawSkeleton(keypoints, minConfidence, ctx, scale = 1) {\n  const adjacentKeyPoints = posenet.getAdjacentKeyPoints(\n    keypoints, minConfidence);\n\n  adjacentKeyPoints.forEach((keypoints) => {\n    drawSegment(toTuple(keypoints[0].position),\n      toTuple(keypoints[1].position), color, scale, ctx);\n  });\n}\n\nfunction drawKeypoints(keypoints, minConfidence, ctx, scale = 1) {\n  for (let i = 0; i < keypoints.length; i++) {\n    const keypoint = keypoints[i];\n\n    if (keypoint.score < minConfidence) {\n      continue;\n    }\n\n    const {y, x} = keypoint.position;\n    drawPoint(ctx, y * scale, x * scale, 3, color);\n  }\n}\n\nfunction drawBoundingBox(keypoints, ctx) {\n  const boundingBox = posenet.getBoundingBox(keypoints);\n\n  ctx.rect(boundingBox.minX, boundingBox.minY,\n    boundingBox.maxX - boundingBox.minX, boundingBox.maxY - boundingBox.minY);\n\n  ctx.strokeStyle = boundingBoxColor;\n  ctx.stroke();\n}\n\nasync function renderToCanvas(a, ctx) {\n  const [height, width] = a.shape;\n  const imageData = new ImageData(width, height);\n\n  const data = await a.data();\n\n  for (let i = 0; i < height * width; ++i) {\n    const j = i * 4;\n    const k = i * 3;\n\n    imageData.data[j + 0] = data[k + 0];\n    imageData.data[j + 1] = data[k + 1];\n    imageData.data[j + 2] = data[k + 2];\n    imageData.data[j + 3] = 255;\n  }\n\n  ctx.putImageData(imageData, 0, 0);\n}\n\nfunction renderImageToCanvas(image, size, canvas) {\n  canvas.width = size[0];\n  canvas.height = size[1];\n  const ctx = canvas.getContext('2d');\n\n  ctx.drawImage(image, 0, 0);\n}\n\nfunction drawHeatMapValues(heatMapValues, outputStride, canvas) {\n  const ctx = canvas.getContext('2d');\n  const radius = 5;\n  const scaledValues = heatMapValues.mul(tf.scalar(outputStride, 'int32'));\n\n  drawPoints(ctx, scaledValues, radius, color);\n}\n\nfunction drawPoints(ctx, points, radius, color) {\n  const data = points.buffer().values;\n\n  for (let i = 0; i < data.length; i += 2) {\n    const pointY = data[i];\n    const pointX = data[i + 1];\n\n    if (pointX !== 0 && pointY !== 0) {\n      ctx.beginPath();\n      ctx.arc(pointX, pointY, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = color;\n      ctx.fill();\n    }\n  }\n}\n\nfunction drawOffsetVectors(\n  heatMapValues, offsets, outputStride, scale = 1, ctx) {\n  const offsetPoints = posenet.singlePose.getOffsetPoints(\n    heatMapValues, outputStride, offsets);\n\n  const heatmapData = heatMapValues.buffer().values;\n  const offsetPointsData = offsetPoints.buffer().values;\n\n  for (let i = 0; i < heatmapData.length; i += 2) {\n    const heatmapY = heatmapData[i] * outputStride;\n    const heatmapX = heatmapData[i + 1] * outputStride;\n    const offsetPointY = offsetPointsData[i];\n    const offsetPointX = offsetPointsData[i + 1];\n\n    drawSegment([heatmapY, heatmapX], [offsetPointY, offsetPointX],\n      color, scale, ctx);\n  }\n}\n\n\n"]}